syntax = "proto3";

package mpb;

option go_package = "./mpb";

import "common.proto";
import "resource.proto";

service ItemService {
    rpc GetItems (ReqGetItems) returns (ResGetItems);
    rpc GetEquips (ReqUserId) returns (ResGetEquips);
    rpc BatchGetEquips (ReqUserIds) returns (ResBatchGetEquips);
    rpc UpgradeBaseEquipStar(ReqUpgradeBaseEquipStar) returns (ResUpgradeBaseEquipStar);
    rpc UpgradeBaseEquipLevel(ReqUpgradeBaseEquipLevel) returns (ResUpgradeBaseEquipLevel);
    rpc ExchangeItems (ReqExchangeItems) returns (ResExchangeItems);
    rpc BatchAddItems (ReqBatchAddItems) returns (ResBatchAddItems);
    rpc GetItemsRsc (ReqGetItemsRsc) returns (ResGetItemsRsc);
    rpc GetWallet (ReqUserId) returns (ResGetWallet);
}

message ReqGetItems {
    uint64 user_id = 1;
    bool with_upgrade_info = 2;
}

message ReqUpgradeBaseEquipStar {
    uint64 user_id = 1;
    EItem.BaseEquipType equipt_type = 2;
    uint32 cur_star = 3;
}

message ResUpgradeBaseEquipStar{
    bool success = 1;
    uint32 new_star = 2;
}

message ReqUpgradeBaseEquipLevel {
    uint64 user_id = 1;
    EItem.BaseEquipType equipt_type = 2;
    uint32 cur_level = 3;
}

message ResUpgradeBaseEquipLevel {
    bool success = 1;
    uint32 new_level = 2;
}

message ReqExchangeItems {
    uint64 user_id = 1;
    repeated Item add_items = 2;
    repeated Item del_items = 3;
    int64 delta_mana = 4;
    EItem.TransReason trans_reason = 5;
    uint64 trans_sub_reason = 6;
}

message ResExchangeItems {
    repeated Item add_items = 1;
    repeated Item del_items = 2;
    repeated Item update_items = 3;
}

message ResGetEquips {
    repeated BaseEquip base_equips = 1;
    repeated NFTEquip nft_equips = 2;
}

message UserEquips {
    repeated BaseEquip base_equips = 1;
    repeated NFTEquip nft_equips = 2;
}

message ResBatchGetEquips {
    map<uint64, UserEquips> equips = 1;
}

message ReqBatchAddItems {
    map<uint64, Items> add_items = 1;
    map<uint64, uint64> add_manas = 2;
    EItem.TransReason trans_reason = 3;
    uint64 trans_sub_reason = 4;
}

message ResBatchAddItems {
    map<uint64, Items> add_items = 1;
    map<uint64, Items> update_items = 2;
}

message ResGetItems {
    repeated Item items = 1;
    repeated BaseEquip base_equips = 2;
    repeated NFTEquip nft_equips = 3;
    uint64 mana = 4;
    repeated BaseEquipUpgradeInfo base_equip_upgrade_infos = 5;
}

message ReqGetItemsRsc {
    repeated uint32 item_ids = 1;
}

message ResGetItemsRsc {
    map<uint32, ItemRsc> items_rsc = 1;
}

message ResGetWallet {
    uint64 mana = 1;
}